@model viajanet.Models.Quarto

@{
    ViewBag.Title = "Cadastro de quarto";
}

<h2>Cadastro de quarto  -  @TempData.Peek("Nome_Hotel")</h2>

<div class="panel panel-default">
    @using (Html.BeginForm())
    {
        <div class="form-horizontal">
            <div class="panel-heading">
                @Html.AntiForgeryToken()
                <h4>Quarto</h4>
                <hr />
            </div>
            <div class="panel-body">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Fk_Hotel, "Hotel", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <input type="hidden" name="Fk_Hotel" value="@TempData.Peek("FK_Hotel")" />
                        <input type="text" name="" value="@TempData.Peek("Nome_Hotel")" readonly class="form-control" />
                        @Html.ValidationMessageFor(model => model.Fk_Hotel, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Descricao,"Descrição", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Descricao, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Descricao, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Diaria,"Valor diária" ,htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Diaria, new { htmlAttributes = new { @class = "form-control money" } })
                        @Html.ValidationMessageFor(model => model.Diaria, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Capacidade,"Capacidade", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Capacidade, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Capacidade, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Suite,"O quarto é uma suíte?", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.Suite)
                            @Html.ValidationMessageFor(model => model.Suite, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="panel-footer">
                    <div class="form-group">
                        <div class="col-md-12">
                            @Html.ActionLink("Voltar", "viewQuartosHotel", "Quartos", new { id = @TempData.Peek("FK_Hotel") }, new { @class = "btn btn-warning pull-left" })
                            <input type="submit" value="Cadastrar" class="btn btn-success pull-right" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
        $(document).ready(function () {
            

            $('.money').mask('000000000000000,00', { reverse: true });
            $('.money2').mask("#.##0,00", { reverse: true });
        });
    </script>
}
