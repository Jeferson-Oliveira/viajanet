@model viajanet.Models.Hotel

@{
    ViewBag.Title = "Cadastro de Hoteis";
}
   	
<!-- Start loading page level scripts and css for this page -->
<link type="text/css" href="~/Content/assets/plugins/bootstrap-touchspin/dist/jquery.bootstrap-touchspin.min.css" rel="stylesheet"> <!-- Touchspin -->
<link type="text/css" href="~/Content/assets/js/jqueryui.css" rel="stylesheet">        									<!-- jQuery UI CSS -->
<script type="text/javascript" src="~/Content/assets/plugins/form-jasnyupload/fileinput.min.js"></script>               			<!-- File Input -->										<!-- Card -->   							
<script type="text/javascript" src="~/Content/assets/demo/demo-formcomponents.js"></script> 
<!-- End loading page level scripts-->
<h2>Cadastro</h2>
<div class="panel panel-default">
    <div class="panel-heading">
        
        <div class="row">
            <div class="col-md-12">
                <h4>Hotel</h4>
                <hr />
            </div>
        </div>
    </div>
    <div class="panel-body">
        @using (Html.BeginForm("Create", "Hotels", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
           @Html.AntiForgeryToken()
            <div class="row">
                <div class="col-md-6 col-sm-12">
                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            <div class="col-xs-12">
                                @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "sr-only" })
                                <div class="input-group">
                                    <span class="input-group-addon">
                                        <i class=" glyphicon glyphicon-list"></i>
                                    </span>
                                    @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control", @placeholder = "Nome" } })
                                    @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-xs-12">
                                @Html.LabelFor(model => model.Telefone, htmlAttributes: new { @class = "sr-only" })
                                <div class="input-group">
                                    <span class="input-group-addon">
                                        <i class="glyphicon glyphicon-phone"></i>
                                    </span>
                                    @Html.EditorFor(model => model.Telefone, new { htmlAttributes = new { @class = "form-control phone", @placeholder = "Telefone" } })

                                    @Html.ValidationMessageFor(model => model.Telefone, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-xs-12">
                                @Html.LabelFor(model => model.Longradouro, htmlAttributes: new { @class = "sr-only" })
                                <div class="input-group">
                                    <span class="input-group-addon">
                                        <i class="glyphicon glyphicon-map-marker"></i>
                                    </span>
                                    @Html.EditorFor(model => model.Longradouro, new { htmlAttributes = new { @class = "form-control", @placeholder = "Longradouro(Rua,Avenida etc)" } })
                                    @Html.ValidationMessageFor(model => model.Longradouro, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-xs-12">
                                @Html.LabelFor(model => model.FK_Estado, "estado", htmlAttributes: new { @class = "control-label  sr-only" })
                                <div class="input-group">
                                    <span class="input-group-addon">
                                        <i class="glyphicon glyphicon-map-marker"></i>
                                    </span>
                                    @Html.DropDownList("FK_Estado", null, htmlAttributes: new { @class = "form-control", @id = "estados", @required = "required" })
                                    @Html.ValidationMessageFor(model => model.FK_Estado, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-xs-12">
                                <label for="Cidades" class="sr-only">Cidades</label>
                                <div class="input-group">
                                    <span class="input-group-addon">
                                        <i class="glyphicon glyphicon-map-marker"></i>
                                    </span>
                                    <select id="cidades" name="FK_Cidade" class="form-control" required="required">
                                        <option value="">Selecione o Estado</option>
                                    </select>
                                    @Html.ValidationMessageFor(model => model.FK_Cidade, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-xs-12">
                                @Html.LabelFor(model => model.Bairro, htmlAttributes: new { @class = "sr-only" })
                                <div class="input-group">
                                    <span class="input-group-addon">
                                        <i class="glyphicon glyphicon-map-marker"></i>
                                    </span>
                                    @Html.EditorFor(model => model.Bairro, new { htmlAttributes = new { @class = "form-control", @placeholder = "Bairro" } })
                                    @Html.ValidationMessageFor(model => model.Bairro, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-xs-12">
                                @Html.LabelFor(model => model.Cep, htmlAttributes: new { @class = "sr-only" })
                                <div class="input-group">
                                    <span class="input-group-addon">
                                        <i class="glyphicon glyphicon-map-marker"></i>
                                    </span>
                                    @Html.EditorFor(model => model.Cep, new { htmlAttributes = new { @class = "form-control cep", @placeholder = "CEP" } })
                                    @Html.ValidationMessageFor(model => model.Cep, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>


                    </div>
                </div>
                <div class="col-md-6 col-sm-12">
                    <div class="form-group">
                        <div class="">
                            <div class="fileinput fileinput-new" style="width: 100%;" data-provides="fileinput">
                                <div class="fileinput-preview thumbnail mb20" data-trigger="fileinput" style="width: 100%; height: 150px;"></div>
                                <div>
                                    <a href="#" class="btn btn-danger fileinput-exists" data-dismiss="fileinput">Remover</a>
                                    <span class="btn btn-info btn-file"><span class="fileinput-new">Selecione uma imagem</span><span class="fileinput-exists">Mudar</span><input accept="image/jpeg|image/gif|image/png" type="file" name="Img"></span>

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="panel-footer">
                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group">
                            <div>
                                <input type="submit" value="Cadastrar" class="btn btn-success pull-right" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    
    
    <script>
        $(document).ready(function () {
            // init masks
            var maskBehavior = function (val) {
                return val.replace(/\D/g, '').length === 11 ? '(00) 00000-0000' : '(00) 0000-00009';
            },
            options = {
                onKeyPress: function (val, e, field, options) {
                    field.mask(maskBehavior.apply({}, arguments), options);
                }
            };

            $('.phone').mask(maskBehavior, options);
            $('.cep').mask('00000-000');

            // end masks
            $("#estados").prepend("<option value='' selected >Selecione o Estado </option>");
            $("#estados").change(function () {

                estAtual = $("#estados").val();
                if (estAtual != "") {
                    $("#cidades").empty();

                    $.ajax({
                        type: "Post",
                        url: "/Hotels/obterCidades/",
                        data: { "id": estAtual },
                        datatype: "Json",
                        success: function (data) {
                            $("#cidades").append(data);
                        }
                    });
                } else {
                    $("#cidades").empty();
                    $("#cidades").prepend("<option value='' selected >Selecione o Estado </option>");
                }

        });
    });
</script> 
}
